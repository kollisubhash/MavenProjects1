<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">88.8.195.32</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">Customer Hub</stringProp>
          </elementProp>
          <elementProp name="Country" elementType="Argument">
            <stringProp name="Argument.name">Country</stringProp>
            <stringProp name="Argument.value">&quot;TW&quot;</stringProp>
            <stringProp name="Argument.desc">Taiwan</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${host}</stringProp>
        <stringProp name="HTTPSampler.port">8080</stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Number of Users" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1375525852000</longProp>
        <longProp name="ThreadGroup.end_time">1375525852000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Soap Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;code&quot;: 0,&#xd;
  &quot;reBackcif&quot;: [&#xd;
    {&#xd;
      &quot;lastName&quot;: &quot;&quot;,&#xd;
      &quot;addresses&quot;: [&#xd;
        {&#xd;
          &quot;zip&quot;: &quot;&quot;,&#xd;
          &quot;country&quot;: &quot;MY&quot;,&#xd;
          &quot;addr&quot;: &quot;戶籍地址中文&quot;,&#xd;
          &quot;addrType&quot;: &quot;1&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;zip&quot;: &quot;100&quot;,&#xd;
          &quot;country&quot;: ${Country},&#xd;
          &quot;eaddr&quot;: &quot;&quot;,&#xd;
          &quot;addr&quot;: &quot;臺北市中正區中山北路１段&quot;,&#xd;
          &quot;addrType&quot;: &quot;2&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;annualIncome&quot;: 1000,&#xd;
      &quot;idType&quot;: &quot;11&quot;,&#xd;
      &quot;gender&quot;: &quot;M&quot;,&#xd;
      &quot;isOnlyAgent&quot;: &quot;0&quot;,&#xd;
      &quot;midName&quot;: &quot;&quot;,&#xd;
      &quot;busiPurposes&quot;: [&#xd;
        {&#xd;
          &quot;relationPurposeType&quot;: &quot;1&quot;,&#xd;
          &quot;status&quot;: &quot;1&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;wealthFroms&quot;: [&#xd;
        { &quot;wealthFromType&quot;: &quot;F01&quot; },&#xd;
        { &quot;wealthFromType&quot;: &quot;I01&quot; },&#xd;
        { &quot;wealthFromType&quot;: &quot;A01&quot; }&#xd;
      ],&#xd;
      &quot;idNo&quot;: &quot;${#TestCase#idNum}&quot;,&#xd;
      &quot;userID&quot;: &quot;44311&quot;,&#xd;
      &quot;ownerBranch&quot;: &quot;0218&quot;,&#xd;
      &quot;firstName&quot;: &quot;&quot;,&#xd;
      &quot;customerType&quot;: &quot;2&quot;,&#xd;
      &quot;credentialInfos&quot;: [&#xd;
        {&#xd;
          &quot;purposeResidence&quot;: &quot;4&quot;,&#xd;
          &quot;idNo&quot;: &quot;0246813579&quot;,&#xd;
          &quot;credentialsInfoType&quot;: &quot;1&quot;,&#xd;
          &quot;expDate&quot;: &quot;2017-06-22&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;birthdayDate&quot;: &quot;2017-06-01&quot;,&#xd;
      &quot;cName&quot;: &quot;自然人&quot;,&#xd;
      &quot;industries&quot;: [&#xd;
        {&#xd;
          &quot;orderNo&quot;: 0,&#xd;
          &quot;industryType&quot;: &quot;F01&quot;,&#xd;
          &quot;industryTitle&quot;: &quot;14&quot;,&#xd;
          &quot;services&quot;: &quot;服務機構&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;countryInfos&quot;: [&#xd;
        {&#xd;
          &quot;code&quot;: &quot;TW&quot;,&#xd;
          &quot;orderNo&quot;: 0,&#xd;
          &quot;countryType&quot;: &quot;1&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;code&quot;: &quot;PH&quot;,&#xd;
          &quot;orderNo&quot;: 0,&#xd;
          &quot;countryType&quot;: &quot;1&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;code&quot;: &quot;MY&quot;,&#xd;
          &quot;orderNo&quot;: 0,&#xd;
          &quot;countryType&quot;: &quot;1&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;riskScore&quot;: 0,&#xd;
      &quot;contacts&quot;: [&#xd;
        {&#xd;
          &quot;orderNo&quot;: 0,&#xd;
          &quot;contactType&quot;: &quot;1&quot;,&#xd;
          &quot;content&quot;: &quot;0987654123&quot;&#xd;
        }&#xd;
      ],&#xd;
      &quot;paidUpCapital&quot;: 0,&#xd;
      &quot;fundsAmount&quot;: 0,&#xd;
      &quot;orgFromChannel&quot;: &quot;&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">88.8.195.32</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customhub-rest/ProcessControl/NationProcess</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value"> application/json;charset=UTF-8 </stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">&quot;NationProcess&quot;</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="130046656">&lt;/GetCityForecastByZIPResult&gt;</stringProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Verify content in response</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>false</success>
            <label>false</label>
            <code>false</code>
            <message>true</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <hostname>true</hostname>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
